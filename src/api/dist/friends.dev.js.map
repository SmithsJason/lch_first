{"version":3,"sources":["friends.js"],"names":["API_URL","fetchNotifications","account","axios","get","params","response","data","map","notification","avatar","senderAvatar","isProcessing","console","error","Error","searchUsers","query","currentAccount","user","message","isSending","sendFriendRequest","senderAccount","receiverAccount","post","handleFriendRequest","requestId","action","log","markAllRead","fetchFriends","friend","isRemoving","removeFriend","userAccount","friendAccount"],"mappings":"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","sourcesContent":["// src/api/friends.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\nexport const fetchNotifications = async (account) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/notifications`, {\r\n      params: { account },\r\n    });\r\n    return response.data.map(notification => {\r\n      const avatar = notification.senderAvatar || 'https://via.placeholder.com/40';\r\n      return {\r\n        ...notification,\r\n        isProcessing: false,\r\n        senderAvatar: avatar,\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error('获取通知错误:', error);\r\n    throw new Error('获取通知失败');\r\n  }\r\n};\r\n\r\nexport const searchUsers = async (query, currentAccount) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users/search`, {\r\n      params: { query, currentAccount },\r\n    });\r\n    return response.data.map(user => ({\r\n      ...user,\r\n      message: '',\r\n      isSending: false,\r\n      avatar: user.avatar || 'https://via.placeholder.com/40',\r\n    }));\r\n  } catch (error) {\r\n    console.error('搜索用户错误:', error);\r\n    throw new Error('搜索用户失败');\r\n  }\r\n};\r\n\r\nexport const sendFriendRequest = async (senderAccount, receiverAccount, message) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/friend-requests/send`, {\r\n      senderAccount,\r\n      receiverAccount,\r\n      message,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('发送好友请求错误:', error);\r\n    throw new Error('发送好友请求失败');\r\n  }\r\n};\r\n\r\nexport const handleFriendRequest = async (requestId, action, account) => {\r\n  console.log(`处理好友请求: ${requestId}, 操作: ${action}, 账户: ${account}`);\r\n  try {\r\n    const response = await axios.post(`${API_URL}/friend-requests/${requestId}/${action}`, {\r\n      account,\r\n    });\r\n    console.log(`${action}好友请求成功:`, response.data);\r\n    return response.data;\r\n   \r\n  } catch (error) {\r\n    console.error(`${action}好友请求错误:`, error);\r\n    throw new Error(`处理好友请求失败`);\r\n  }\r\n};\r\n\r\nexport const markAllRead = async (account) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/notifications/mark-all-read`, {\r\n      account,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('标记全部已读错误:', error);\r\n    throw new Error('标记已读失败');\r\n  }\r\n};\r\n\r\nexport const fetchFriends = async (account) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/friends`, {\r\n      params: { account },\r\n    });\r\n    return response.data.map(friend => ({\r\n      ...friend,\r\n      isRemoving: false,\r\n      avatar: friend.avatar || 'https://via.placeholder.com/40',\r\n    }));\r\n  } catch (error) {\r\n    console.error('获取好友列表错误:', error);\r\n    throw new Error('获取好友列表失败');\r\n  }\r\n};\r\n\r\nexport const removeFriend = async (userAccount, friendAccount) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/friends/remove`, {\r\n      params: { userAccount, friendAccount },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('删除好友错误:', error);\r\n    throw new Error('删除好友失败');\r\n  }\r\n};"],"file":"friends.dev.js"}