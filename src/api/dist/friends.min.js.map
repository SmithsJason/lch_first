{"version":3,"sources":["friends.js"],"names":["_axios","_interopRequireDefault","require","API_URL","fetchNotifications","account","response","regeneratorRuntime","async","_context","prev","next","awrap","axios","get","concat","params","sent","abrupt","data","map","notification","_objectSpread","isProcessing","senderAvatar","t0","Error","stop","searchUsers","query","currentAccount","_context2","user","message","isSending","avatar","console","error","sendFriendRequest","senderAccount","receiverAccount","_context3","post","handleFriendRequest","requestId","action","_context4","log","_context5","fetchFriends","_context6","friend","isRemoving","removeFriend","userAccount","friendAccount","_context7"],"mappings":"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","file":"friends.min.js","sourcesContent":["// src/api/friends.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\nexport const fetchNotifications = async (account) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/notifications`, {\r\n      params: { account },\r\n    });\r\n    return response.data.map(notification => {\r\n      const avatar = notification.senderAvatar || 'https://via.placeholder.com/40';\r\n      return {\r\n        ...notification,\r\n        isProcessing: false,\r\n        senderAvatar: avatar,\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error('获取通知错误:', error);\r\n    throw new Error('获取通知失败');\r\n  }\r\n};\r\n\r\nexport const searchUsers = async (query, currentAccount) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/users/search`, {\r\n      params: { query, currentAccount },\r\n    });\r\n    return response.data.map(user => ({\r\n      ...user,\r\n      message: '',\r\n      isSending: false,\r\n      avatar: user.avatar || 'https://via.placeholder.com/40',\r\n    }));\r\n  } catch (error) {\r\n    console.error('搜索用户错误:', error);\r\n    throw new Error('搜索用户失败');\r\n  }\r\n};\r\n\r\nexport const sendFriendRequest = async (senderAccount, receiverAccount, message) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/friend-requests/send`, {\r\n      senderAccount,\r\n      receiverAccount,\r\n      message,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('发送好友请求错误:', error);\r\n    throw new Error('发送好友请求失败');\r\n  }\r\n};\r\n\r\nexport const handleFriendRequest = async (requestId, action, account) => {\r\n  console.log(`处理好友请求: ${requestId}, 操作: ${action}, 账户: ${account}`);\r\n  try {\r\n    const response = await axios.post(`${API_URL}/friend-requests/${requestId}/${action}`, {\r\n      account,\r\n    });\r\n    console.log(`${action}好友请求成功:`, response.data);\r\n    return response.data;\r\n   \r\n  } catch (error) {\r\n    console.error(`${action}好友请求错误:`, error);\r\n    throw new Error(`处理好友请求失败`);\r\n  }\r\n};\r\n\r\nexport const markAllRead = async (account) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/notifications/mark-all-read`, {\r\n      account,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('标记全部已读错误:', error);\r\n    throw new Error('标记已读失败');\r\n  }\r\n};\r\n\r\nexport const fetchFriends = async (account) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/friends`, {\r\n      params: { account },\r\n    });\r\n    return response.data.map(friend => ({\r\n      ...friend,\r\n      isRemoving: false,\r\n      avatar: friend.avatar || 'https://via.placeholder.com/40',\r\n    }));\r\n  } catch (error) {\r\n    console.error('获取好友列表错误:', error);\r\n    throw new Error('获取好友列表失败');\r\n  }\r\n};\r\n\r\nexport const removeFriend = async (userAccount, friendAccount) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/friends/remove`, {\r\n      params: { userAccount, friendAccount },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('删除好友错误:', error);\r\n    throw new Error('删除好友失败');\r\n  }\r\n};"]}